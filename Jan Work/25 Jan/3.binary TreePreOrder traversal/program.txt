/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> val = new ArrayList<>();
        TreeNode curr = root;
        TreeNode last;

        while(curr!=null){
            if(curr.left == null){
                val.add(curr.val);
                curr = curr.right; 
            }
            else
            {
                last = curr.left;
                while (last.right != null && last.right != curr) {
                    last = last.right;
            }
         if (last.right == null) {
                    val.add(curr.val);
                    last.right = curr;
                    curr = curr.left;
                } 
                else {
                    last.right = null;
                    curr = curr.right;
                }
            }
        }
        
        return val;
    }
}