/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if(root == null){
            return list;
        }
        Queue<TreeNode> queue  = new LinkedList<>();
        queue.add(root);
        List<Integer> arr = new ArrayList<>();
        arr.add(root.val);
        list.add(arr);
        if(root.left != null || root.right != null){
        while(!queue.isEmpty()){
            List<Integer> level = new ArrayList<>();
            int size = queue.size();
            for(int i = 1 ;i <= size ; i++){
                TreeNode curr = queue.poll();
                if(curr.left != null  ){
                    level.add(curr.left.val);
                    queue.add(curr.left);
                }
                if(curr.right != null  ){
                    level.add(curr.right.val);
                    queue.add(curr.right);
                }
                
            }
            if(level.size() != 0)
            list.add(level);
        }
        return list;
        }
        return list;
    }
}