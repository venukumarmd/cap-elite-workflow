/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }

        Queue<TreeNode> Queue = new LinkedList<>();
        Queue.offer(root);
        int level = 0;

        while (!Queue.isEmpty()) {
            List<Integer> currLevel = new ArrayList<>();
            int size = Queue.size();

            while (size-- > 0) {
                TreeNode curr = Queue.poll();
                currLevel.add(curr.val);

                if (curr.left != null)
                Queue.offer(curr.left);
                if (curr.right != null) 
                Queue.offer(curr.right);
            }

            if (level % 2 == 1) {
                Collections.reverse(currLevel);
            }
            result.add(currLevel);
            level++;
        }

        return result;
    }
}